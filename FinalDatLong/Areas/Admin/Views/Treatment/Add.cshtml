@using FinalDatLong.Models
@model FinalDatLong.Models.Treatment

@{
    ViewBag.Title = "Add";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Treatment</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .detail-container {
            width: 80%;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: row;
        }

        .profile-column, .detail-column {
            flex: 1;
            margin-right: 20px;
        }

        h2 {
            color: #4CAF50;
            margin-bottom: 20px;
        }

        .detail-label {
            font-weight: bold;
            display: block;
            margin-bottom: 5px;
        }

        .back-button, .save-button {
            margin-top: 20px;
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th, td {
            padding: 12px;
            text-align: left;
        }

        textarea {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ddd;
            border-radius: 4px;
            resize: none;
        }

        input[type="text"] {
            width: calc(100% - 16px);
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .search-container {
            position: relative;
            display: inline-block;
            width: 100%;
            margin-bottom: 10px;
        }

            .search-container input {
                width: 100%;
                padding: 8px;
                margin-top: 8px;
                margin-bottom: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }

        .search-results {
            position: absolute;
            z-index: 1;
            width: 100%;
            background-color: #f9f9f9;
            max-height: 150px;
            overflow-y: auto;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

            .search-results button {
                width: 100%;
                text-align: left;
                padding: 8px;
                border: none;
                border-bottom: 1px solid #ddd;
                background-color: white;
                cursor: pointer;
            }
    </style>
</head>


<body>
    <form action="/Treatment/Add" method="post">
        <div class="detail-container">
            <div class="profile-column">

                <h2>Patient Profile</h2>
                <div>

                    <span class="detail-label">Patient ID:</span>
                    <input type="text" name="IDPatient" placeholder="Patient ID" >
                    @Html.ValidationMessageFor(model => model.IDPatient, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="detail-column">
                <h2>Add Treatment</h2>
                <div>
                    <span class="detail-label">Description:</span>
                    <textarea name="Description" placeholder="Enter treatment description" ></textarea>
                    @Html.ValidationMessageFor(model => model.Description, "text-danger", new { @class = "text-danger" })
                </div>
                <div>
                    <span class="detail-label">Treatment Description:</span>
                    <textarea name="TreatmentDescription" placeholder="Enter detailed treatment information" ></textarea>
                    @Html.ValidationMessageFor(model => model.TreatmentDescription, "", new { @class = "text-danger" })
                </div>
                <div class="search-container">
                    <span class="detail-label">Search Medication:</span>
                    <input type="text" id="SearchMedication" placeholder="Enter medication name">
                    <div class="search-results" id="SearchResults"></div>
                </div>
                <div>
                    <span class="detail-label">Medications:</span>
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Dosage</th>
                            </tr>
                        </thead>
                        <tbody id="MedicationTableBody">
                            <!-- Dữ liệu thuốc được thêm vào đây -->
                        </tbody>
                    </table>
                </div>

                <button class="save-button" type="submit">Save Treatment</button>

                <button class="back-button">Back</button>
            </div>
        </div>
    </form>
    <script>
        // Mô phỏng dữ liệu danh sách thuốc
        const medicationList = [
            "Medication 1",
            "Medication 2",
            "Medication 3",
            // Thêm dữ liệu khác nếu cần
        ];

        const searchMedicationInput = document.getElementById("SearchMedication");
        const searchResultsContainer = document.getElementById("SearchResults");
        const medicationTableBody = document.getElementById("MedicationTableBody");

        searchMedicationInput.addEventListener("input", function () {
            const searchValue = this.value.toLowerCase();
            const filteredResults = medicationList.filter(medication => medication.toLowerCase().includes(searchValue));
            displaySearchResults(filteredResults);
        });

        function displaySearchResults(results) {
            searchResultsContainer.innerHTML = "";
            results.forEach(result => {
                const button = document.createElement("button");
                button.textContent = result;
                button.addEventListener("click", function () {
                    addMedicationToTable(result);
                    searchMedicationInput.value = "";
                    searchResultsContainer.innerHTML = "";
                });
                searchResultsContainer.appendChild(button);
            });
        }

        function addMedicationToTable(medicationName) {
            const newRow = medicationTableBody.insertRow();
            const cell1 = newRow.insertCell(0);
            const cell2 = newRow.insertCell(1);
            const cell3 = newRow.insertCell(2);
            cell1.textContent = ""; // Để ID trống hoặc bạn có thể tạo một hệ thống quản lý ID
            cell2.textContent = medicationName;
            cell3.innerHTML = '<textarea placeholder="Enter dosage"></textarea>';
        }
        function goBack() {
            // Thêm logic để quay lại trang trước đó hoặc đóng cửa sổ thoáng
            window.history.back();
        }
    </script>
</body>
</html>